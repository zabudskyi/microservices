version: '3.3'
services:
  mongo_db:
    image: mongo:3.4.10
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high
    volumes:
      - post_db:${DB_FOLDER}
    networks:
      back_net:
        aliases:
          - post_db_container
          - comment_db_container
  ui:
    image: ${USERNAME}/ui:${UI_TAG}
    deploy:
      placement:
        constraints:
          - node.role == worker
      mode: replicated
      replicas: 3
    ports:
      - ${HOST_PUMA_PORT}:9292/tcp
    networks:
      - front_net
  post:
    image: ${USERNAME}/post:${POST_TAG}
    deploy:
      placement:
        constraints:
          - node.role == worker
      mode: replicated
      replicas: 3
    networks:
      back_net:
        aliases:
          - post_container
      front_net:
        aliases:
          - post_container
  comment:
    image: ${USERNAME}/comment:${COMMENT_TAG}
    deploy:
      placement:
        constraints:
          - node.role == worker
      mode: replicated
      replicas: 3
    networks:
      back_net:
        aliases:
          - comment_container
      front_net:
        aliases:
          - comment_container
  prometheus:
    image: ${USERNAME}/prometheus:2.0
    ports:
      - '9090:9090'
    networks:
      back_net:
      front_net:

  node-exporter:
    image: prom/node-exporter:v0.15.0
    deploy:
      mode: global
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
     back_net:
     front_net:

  mongodb_exporter:
    image: ${USERNAME}/mongodb_exporter:1.0
    networks:
      back_net:
    environment:
      - MONGODB_URL=mongodb://${COMPOSE_PROJECT_NAME}_mongo_db_1:27017

  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      back_net:


  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    networks:
      back_net:

  alertmanager:
    image: ${USERNAME}/alertmanager
    command:
      - '-config.file=/etc/alertmanager/config.yml'
    ports:
      - '9093:9093'
    networks:
      back_net:

volumes:
  post_db:
  grafana_data:

networks:
  back_net:
  front_net:
